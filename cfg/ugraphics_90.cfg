sv_cheats 1
con_filter_enable 1
con_filter_text_out "Host_WriteConfiguration"

cl_playerspraydisable 0
r_spray_lifetime 2

mat_shadowstate 0					// Set to 1 to enable.
r_shadowmaxrendered 0				// Set to 11 to enable.
r_shadowrendertotexture 0			// Set to 1 to enable, but can cause lag; 0 is the recommended setting either way.
r_shadows 0						// Set to 1 to enable.
//nb_shadow_dist 400				// Distance from which shadows are visible. Uncomment to modify.

r_eyes 1 			// Set to 1 to enable.
r_flex 1 			// Set to 1 to enable.
r_lod 1 			// Needs to be set to 1, or else facial features will be disabled regardless.
r_rootlod 2 		// Set to 1 to enable.
r_teeth 1 			// Set to 1 to enable.
mp_usehwmmodels -1  // disables improved facial expressions (problems with multicore, for some reason), added for completeness even though the cvar is technically non-functioning since 3/15/14
mp_usehwmvcds -1 	// disables improved facial expressions, added for completeness even though the cvar is technically non-functioning since 3/15/14
r_eyegloss 0
r_eyemove 0
r_eyeshift_x 0
r_eyeshift_y 0
r_eyeshift_z 0
r_eyesize 0
blink_duration 0 // Default is 0.2

cl_ragdoll_fade_time 0			// Sets how long until ragdolls fade, in seconds. Default is 15.
cl_ragdoll_forcefade 1			// Set to 0 to enable.
cl_ragdoll_physics_enable 0		// Sets whether bullets, explosives, or attacks will interact with the body. Default is 1.
g_ragdoll_fadespeed 0			// Sets how fast the fading effect is. Default is 600.
g_ragdoll_lvfadespeed 0			// Set to 100 to enable. Convar isn't documented.
ragdoll_sleepaftertime 0		// Set to "5.0f" to enable.

cl_phys_props_enable 0 			// Disables clientside props being affected by physics. Set to 1 to enable.
cl_phys_props_max 0 			// Sets the maximum amount of clientside props your client can have at once. Default is 128.
props_break_max_pieces 0 		// Sets the amount of pieces props can break into. Default is -1 (model default).
r_propsmaxdist 1				// Sets the maximum visible distance from which you can see clientside props. Default is 1000.
violence_agibs 0				// Sets whether you can see gibs from the 'alien' team (a source engine default name for one team. Set to 1 to enable.
violence_hgibs 0				// Sets whether you can see gibs from the 'human' team (a source engine default name for one team. Set to 1 to enable.

//dsp_enhance_stereo 0					// Provides you with a neat positional audio effect, but can have a negative effect on performance in some cases.
//dsp_slow_cpu 0							// If set to 1, reduces the quality of DSP effects. Negligible performance gain.
//snd_async_fullyasync 1 					// Runs the audio fully asynchronous, and, for some reason, reduces the number of TDRs (https://forums.geforce.com/default/topic/389688/geforce-drivers/nvidia-statement-on-tdr-errors-display-driver-nvlddmkm-stopped-/)
//snd_pitchquality 1						// Helps determine what to set the audio quality at. More info a few lines down.						
//snd_spatialize_roundrobin 1				// Lowend optimization: if nonzero, spatialize only a fraction of sound channels each frame. 1/2^x of channels will be spatialized
//snd_mixahead 0.05						// Sets how long it takes until attack sounds play. By default the setting is 0.1, or 100ms, which is 1/10 of a second. That means that the current value plays it 50ms after attacking. Sounds usually start to glitch at lower values, so play around with this and see how low you can get!

// dsp_slow_cpu and snd_pitchquality determine what your audio quality is set to in the Options menu.
// High: snd_pitchquality 1; dsp_slow_cpu 0
// Medium: snd_pitchquality 0; dsp_slow_cpu 0
// Low: snd_pitchqualiy 0; dsp_slow_cpu 1
// Note: for snd_pitchqualiy 1; dsp_slow_cpu 1 options menu still displays "Low". I'm not sure if this actually makes the sound quality even lower.

mat_phong 0							// Disables phonging on all models. Also achieved by enabling DX8. Disables lightwarps.
cl_detaildist 0 					// Distance at which the detailed parts of props are no longer visible (lower LODs)
cl_detailfade 0						// Distance across which detail props fade in
cl_drawmonitors 0					// Disables the rendering of in-game "monitors" which contain 3D rendered images. Mostly, if not completely unused in TF2.
cl_ejectbrass 0						// Disables brass ejection
cl_jiggle_bone_framerate_cutoff 0 	// Turns off jigglebones, although I recommend keeping them on at all times by setting them to 1, since their performance impact is generally none/negligible.
cl_new_impact_effects 0				// Disables new impact effects
cl_show_splashes 0					// Disables water splashes
func_break_max_pieces 0				// Undocumented, but probably the same as props_break_max_pieces
glow_outline_effect_enable 0 		// Cart glow effect. Performance loss with this is generally negligible, however, so I recommend enabling it simply because of how useful it is.
lod_transitiondist 0				// Sets how far you have to be from someone to make them go to their next LOD. Setting this to 0 forces the lowest LOD.
mat_antialias 0						// Sets lowest antialiasing value.
mat_bumpmap 1 						// Controls bumpmapping. Has a weird effect if used on DX9, so it's set to 1.
mat_colcorrection_disableentities 1 // Disables color-correcting entities.
mat_colorcorrection 0				// Disables color-correction.
mat_disable_bloom 1					// Disables the bloom effect that allows light to reflect off of a surface, and the HDR effect.
mat_disable_fancy_blending 1		// Disables fancy texture blending.
mat_disable_lightwarp 1				// Disables lightwarps, which partially determine shading for players, entities, and the map. mat_phong also does this.
mat_envmapsize 8					// Changes envmap size.
mat_envmaptgasize 8					// No fucking clue.
mat_filterlightmaps 1				// Filters lightmaps.
mat_filtertextures 1				// Filters textures.
mat_forceaniso 1					// Forces anisotropic filtering level
mat_hdr_level 0						// Sets HDR level.
mat_max_worldmesh_vertices 512		// Not even going to try to guess, sorry. :(
mat_monitorgamma 2.0 				// Controls brightness, try 1.8 to make it brighter or 2.2 to get it darker. Only works in fullscreen.
mat_motion_blur_enabled 0			// Disables motion blur.
mat_parallaxmap 0					// Disables parallax mapping.
mat_mipmaptextures 1				// Control mipmapping
mat_reducefillrate 1				// Reduces the fillrate when the game is run in DX8.
mat_reduceparticles 1				// Reduces particle count.
mat_specular 1 						// Controls specularity. Setting this to 0 will make ubers non-shiny, and will remove some specular effects from in-game entities which support it.
mat_fastspecular 1					// Fast specularity.
mat_trilinear 0 					// Sets trlinear mode.
mat_viewportscale 1 				// Almost no performance gain from viewport upscaling.
mat_viewportupscale 1				//
mat_wateroverlaysize 1				// Water overlay size.
mp_decals 9 						// `9' is a good value to still see the spread pattern from a scattergun without any real performance loss. Needs to be changed with r_decals.
r_3dsky 0							// Disables 3D skies. This makes maps like koth_wubwubwub much, much less spectacular, so you need to compromise.
r_3dnow 0							// Disables 3DNow
r_ambientboost 0					// Controls ambient lights
r_ambientfactor 0					// Controls ambient lights
r_ambientmin 0						// Controls ambient lights
r_avglight 0						// Controls average lighting on objects
r_cheapwaterend 1					// Activates cheap water
r_cheapwaterstart 1					// Activates cheap water
r_decals 9							// Controls decal amount. Needs to be changed with mp_decals.
r_decalstaticprops 0				// Enables whether decals can be seen on props.
r_decal_cullsize 15					// Controls the cull size of decals.
r_drawdetailprops 0					// Controls whether details on props should be drawn at all.
r_drawmodeldecals 0					// Controls whether decals should be seeable on a model.
r_drawflecks 0						// Controls whether particles upon hitting a surface with a bullet should be rendered.
r_dynamic 0							// Disables dynamic lighting.
r_maxdlights 0						// Determines the maximum number of dynamic lights visible on the screen.
r_physpropstaticlighting 0			// Dtermines if there should be static lighting on props
r_occlusion	1						// Use occlussion from Source engine?
r_worldlights 1                     // Number of world lights to use per vertex
r_flashlightdepthtexture 0			// Specifies how detailed the flashlight light should be. Useless in TF2. 
r_forcewaterleaf 1					// Optimization to water - considers view in leaf under water for purposes of culling.
r_lightaverage 0					// Disables average lighting.
r_maxnewsamples 2					// Undocumented.
r_maxsampledist 1					// Undocumented.
r_propsmaxdist 0					// Max visible distance for props.
r_renderoverlayfragment 0			// Undocumented.
r_staticprop_lod 4					// Sets the default LOD for static props.
r_waterdrawreflection 0				// Controls as to whether reflections should be drawn on the surface of water.
r_waterdrawrefraction 1				// Controls as to whether to calculate refractions when in water.
r_waterforceexpensive 0				// Forces expensive water.
r_waterforcereflectentities 0		// Forces as to whether entities should be reflected into water even if r_waterdrawreflection is 0.
rope_averagelight 0					// Makes ropes use average of cubemap lighting instead of max intensity.
rope_collide 0						// Collide rope with the world.
rope_rendersolid 0					// Disables rendering ropes/cables at all.
rope_shake 0						// Controls whether ropes should shake as if there's wind.
rope_smooth 0						// Controls as to whether there should be an antialiasing effect on ropes.
rope_subdiv 0						// Rope subdivision amount.
rope_wind_dist 0					// If a rope is this far away, don't simulate wind on them.
tf_particles_disable_weather 1 		// Disable weather effects on maps supporting it. For example, setting this to `1' disables rain effects on *_sawmill.
tracer_extra 0						// Undocumented.
violence_ablood 1 					// Setting ablood/hblood to 1 actually improves perf usually
violence_hblood 1					//

// Some shit Stabby added, but I have no idea what it does. :P
mat_software_aa_quality 0 // was 9
mat_software_aa_strength 0
mat_software_aa_strength_vgui -1
mat_software_aa_blur_one_pixel_lines 0
mat_software_aa_edge_threshold 9
mat_software_aa_tap_offset "1"

in_usekeyboardsampletime 0
mat_clipz 1 	 // FX card users should set this to 0
mat_forcehardwaresync 0
mat_levelflush 1
m_rawinput 1 	 // Turn on raw mouse input.
mat_vsync 0 	 // Turn off vsync to avoid nasty I/O latency.
r_fastzreject -1 // Values >1 enable a fast Z rejection algorithm, to be performed on the GPU (as opposed to on the CPU). The value `-1' autodetects hardware support for this feature, which is safer than forcing it.
mat_queue_mode 2 // mat_queue mode is another frequently asked about cvar, it
                 // defines the threading method to be used by the material
                 // system. It has been unstable to use in the past, but
                 // nowadays it's generally okay.
                 //
                 // Here are the possible values:
                 //     -2 legacy default
                 //     -1 default
                 //      0 synchronous single thread
                 //      1 queued single thread
                 //      2 queued multithreaded
                 //
                 // If you have problems with the value `2', try setting it to
                 // `-1'.
                 //
                 // As an aside, there are quite a few bugs in the demo system
                 // that occur when mat_queue_mode is set to a value that is
                 // not `-1'. If you intend to do work with the demo system,
                 // maybe you should change this.

cl_threaded_bone_setup 0
cl_threaded_client_leaf_system 0
r_queued_decals 0
r_queued_ropes 1
r_queued_post_processing 0
r_threaded_client_shadow_manager 1
r_threaded_particles 1
r_threaded_renderables 1
cl_forcepreload 1								   // Forces preloading sounds and such to make it lag less when in-game.
// mat_viewportupscale 1 and mat_viewportscale 0.5 // for terrible GPU's only
cl_software_cursor 0 							   // 1 = fixes Windows cursor appearing on screen bug
studio_queue_mode 0 							   // default "1". Can give a major FPS boost, but causes crashes. For some reason it is stable when viewing demos, so feel free to set to "1" when not in multiplayer

//cl_showbattery 1 						 // Indicates if we're on battery power or plugged in. Not useful if you're not using a laptop.
//cl_mvm_wave_status_visible_during_wave 1 // Extremely useful convar to show bots remaining without having to view scoreboard

clear
r_drawtracers_firstperson 0
sv_cheats 0 					  // Turning sv_cheats off now, since we don't need it on anymore.